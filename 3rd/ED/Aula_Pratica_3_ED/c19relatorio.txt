O problema com esse c√≥digo √© que a vari√°vel buf √© declarada globalmente, 
mas nunca √© alocada em mem√≥ria usando malloc ou calloc. 
Isso significa que buf aponta para uma √°rea de mem√≥ria n√£o alocada, 
o que pode causar comportamentos indefinidos quando tentamos escrever dados nessa mem√≥ria.

Para corrigir o c√≥digo, precisamos alocar mem√≥ria para buf antes de us√°-lo. 
Podemos fazer isso usando a fun√ß√£o malloc para alocar um bloco de mem√≥ria com 
um tamanho espec√≠fico.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT ANTES DA CORRE√á√ÉO

Script started on Thu Apr  6 01:30:42 2023
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlllbd  db c   l  exitvalgrind --leak-check=full ./c16c[33Dlldb c16c                        [24D[9Dgcc -g c16correto.c -o c16c[27Dvalgrind --leak-check=full ./c16[32Dlldb c16                        [24D[8Dgcc -g c16.c -o c16[P[9C [10D9.c -o c16[9D[1C[1C[1C[1C[1C[1C[1C[1C[1C 9[?2004l

[1mc19.c:20:8: [0m[0;1;35mwarning: [0m[1mcomparison of array 'line' not equal to a null pointer is always true [-Wtautological-pointer-compare][0m
    if(line != NULL) 
[0;1;32m       ^~~~    ~~~~
[0m1 warning generated.
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c19[?2004l

(lldb) target create "c19"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c19' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gr
Process 3280 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c19' (x86_64)
enter a number:

1 3

Process 3280 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mEXC_BAD_ACCESS (code=1, address=0x0)[0m
    frame #0: [33m0x00007fff71cad880[0m libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem + 96
libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem:
[33m-> [0m 0x7fff71cad880 <+96>:  movb   %cl, (%rdi)
[33m   [0m 0x7fff71cad882 <+98>:  addq   $0x1, %rdi
[33m   [0m 0x7fff71cad886 <+102>: subq   $0x1, %rdx
[33m   [0m 0x7fff71cad88a <+106>: jne    0x7fff71cad87a            ; <+90>
Target 0: (c19) stopped.
(lldb) [1G[2m(lldb) [22m[8Gquit
Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c19[8Dgcc -g c19.c -o c19[19Dexit               [15Dvalgrind --leak-check=full ./c16c  9[?2004l

==3300== Memcheck, a memory error detector
==3300== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==3300== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==3300== Command: ./c19
==3300== 
enter a number:
3
==3300== Invalid write of size 1
==3300==    at 0x100126F75: _platform_memmove$VARIANT$Ivybridge (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==3300==    by 0x1003BD6C0: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==3300==    by 0x1003C5CCB: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==3300==    by 0x1003EAAD2: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==3300==    by 0x1003D1084: vsprintf_l (in /usr/lib/system/libsystem_c.dylib)
==3300==    by 0x1003FF75C: __sprintf_chk (in /usr/lib/system/libsystem_c.dylib)
==3300==    by 0x100003EB2: printSum (c19.c:22)
==3300==    by 0x100003F13: main (c19.c:28)
==3300==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3300== 
==3300== 
==3300== Process terminating with default action of signal 11 (SIGSEGV)
==3300==  Access not within mapped region at address 0x0
==3300==    at 0x100126F75: _platform_memmove$VARIANT$Ivybridge (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==3300==    by 0x1003BD6C0: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==3300==    by 0x1003C5CCB: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==3300==    by 0x1003EAAD2: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==3300==    by 0x1003D1084: vsprintf_l (in /usr/lib/system/libsystem_c.dylib)
==3300==    by 0x1003FF75C: __sprintf_chk (in /usr/lib/system/libsystem_c.dylib)
==3300==    by 0x100003EB2: printSum (c19.c:22)
==3300==    by 0x100003F13: main (c19.c:28)
==3300==  If you believe this happened as a result of a stack
==3300==  overflow in your program's main thread (unlikely but
==3300==  possible), you can try to increase the size of the
==3300==  main thread stack using the --main-stacksize= flag.
==3300==  The main thread stack size used in this run was 8388608.
==3300== 
==3300== HEAP SUMMARY:
==3300==     in use at exit: 22,155 bytes in 163 blocks
==3300==   total heap usage: 177 allocs, 14 frees, 26,899 bytes allocated
==3300== 
==3300== LEAK SUMMARY:
==3300==    definitely lost: 0 bytes in 0 blocks
==3300==    indirectly lost: 0 bytes in 0 blocks
==3300==      possibly lost: 0 bytes in 0 blocks
==3300==    still reachable: 6,144 bytes in 2 blocks
==3300==         suppressed: 16,011 bytes in 161 blocks
==3300== Reachable blocks (those to which a pointer was found) are not shown.
==3300== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3300== 
==3300== For lists of detected and suppressed errors, rerun with: -s
==3300== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)
zsh: segmentation fault  valgrind --leak-check=full ./c19
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hvalgrind --leak-check=full ./c19[32Dlldb c19                        [24D[8Dgcc -g c19.c -o c19[19Dexit               [15Dvalgrind --leak-check=full ./c16c[33Dlldb c16c                        [24D[9Dgcc -g c16correto.c -o c16c[P[17C [18D9correto.c -o c16c[17D[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1Cc 9c[?2004l

[1mc19correto.c:20:8: [0m[0;1;35mwarning: [0m[1mcomparison of array 'line' not equal to a null pointer is always true
      [-Wtautological-pointer-compare][0m
    if(line != NULL) 
[0;1;32m       ^~~~    ~~~~
[0m1 warning generated.
[1m[7m%[27m[1m[0m                                                                                                                           
 
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT DEPOIS DA CORRE√á√ÉO

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb q c19c[?2004l

(lldb) target create "c19c"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c19c' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gr
Process 3334 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c19c' (x86_64)
enter a number:

3

sum=6

Process 3334 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c19c[9Dgcc -g c19correto.c -o c19c[27Dvalgrind --leak-check=full ./c19c[?2004l

==3345== Memcheck, a memory error detector
==3345== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==3345== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==3345== Command: ./c19c
==3345== 
enter a number:
3
==3345== Conditional jump or move depends on uninitialised value(s)
==3345==    at 0x100614108: _platform_memchr$VARIANT$Base (in /usr/lib/system/libsystem_platform.dylib)
==3345==    by 0x1003BD7B4: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==3345==    by 0x1003C5CCB: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==3345==    by 0x1003EAAD2: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==3345==    by 0x1003C32B1: vfprintf_l (in /usr/lib/system/libsystem_c.dylib)
==3345==    by 0x1003C141D: printf (in /usr/lib/system/libsystem_c.dylib)
==3345==    by 0x100003E9A: printSum (c19correto.c:24)
==3345==    by 0x100003EF3: main (c19correto.c:30)
==3345== 
sum=6
==3345== 
==3345== HEAP SUMMARY:
==3345==     in use at exit: 22,155 bytes in 163 blocks
==3345==   total heap usage: 178 allocs, 15 frees, 26,999 bytes allocated
==3345== 
==3345== LEAK SUMMARY:
==3345==    definitely lost: 0 bytes in 0 blocks
==3345==    indirectly lost: 0 bytes in 0 blocks
==3345==      possibly lost: 0 bytes in 0 blocks
==3345==    still reachable: 6,144 bytes in 2 blocks
==3345==         suppressed: 16,011 bytes in 161 blocks
==3345== Reachable blocks (those to which a pointer was found) are not shown.
==3345== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3345== 
==3345== Use --track-origins=yes to see where uninitialised values come from
==3345== For lists of detected and suppressed errors, rerun with: -s
==3345== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004heexit[?2004l


Script done on Thu Apr  6 01:32:28 2023
