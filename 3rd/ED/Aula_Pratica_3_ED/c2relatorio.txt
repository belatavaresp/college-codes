O programa apresentava um erro de inicializa√ß√£o pois o vetor a era inicializado
apenas da posi√ß√£o 0-8 e a posi√ß√£o 9 era preenchida por lixo de mem√≥ria, o que 
quebrava o programa na fun√ß√£o de imprimir a[9]

Para resolver o problema apenas mudei o segundo argumento do for que preenche 
o vetor a por i<10

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT ANTES DA CORRE√á√ÉO

Script started on Wed Apr  5 22:51:30 2023
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c2[?2004l

(lldb) target create "c2"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c2' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gbreakpoint --file c2.c ==[K[1G[2m(lldb) [22m[32G[K[1G[2m(lldb) [22m[31G-- l[K[1G[2m(lldb) [22m[34G[1G[2m(lldb) [22m[33Gline 11
invalid command 'breakpoint --file'.
(lldb) [1G[2m(lldb) [22m[8Gbreakpoint --file c2.c --line 11[1G[2m(lldb) [22m[40G[1@s-[1G[2m(lldb) [22m[20G[1@e-[1G[2m(lldb) [22m[21G[1@t-[1G[2m(lldb) [22m[22G[1@ -[1G[2m(lldb) [22m[23G
Breakpoint 1: where = c2`main + 78 at c2.c:11:10, address = 0x0000000100003f0e
(lldb) [1G[2m(lldb) [22m[8Gr
Process 62308 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c2' (x86_64)
Process 62308 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x0000000100003f0e[0m c2`main(argc=1, argv=0x00007ffeefbff6d0) at [36mc2.c[0m:[33m11[0m:[33m10[0m
[33m  [0m 8   	    a[i] = i;
[33m  [0m 9   	    
[33m  [0m 10  	  [35m//imprime uma posi√ß√£o que nao foi preenchida --> a[9][0m
[33m->[0m 11  	  [32mfor[0m (i [4m=[0m [31m0[0m; i < [31m10[0m; i++){
[33m  [0m 12  	    printf("%d ", a[i]);
[33m  [0m 13  	  }
[33m  [0m 14  	  printf("\n");
Target 0: (c2) stopped.
(lldb) [1G[2m(lldb) [22m[8Gcontinue
Process 62308 resuming
0 1 2 3 4 5 6 7 8 32766 

Process 62308 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c2exit   valgrind --leak-check=full ./c1c  2[?2004l

==62329== Memcheck, a memory error detector
==62329== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==62329== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==62329== Command: ./c2
==62329== 
==62329== Conditional jump or move depends on uninitialised value(s)
==62329==    at 0x100614108: _platform_memchr$VARIANT$Base (in /usr/lib/system/libsystem_platform.dylib)
==62329==    by 0x1003BD7B4: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C5CCB: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003EAAD2: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C32B1: vfprintf_l (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C141D: printf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x100003F34: main (c2.c:12)
==62329== 
==62329== Conditional jump or move depends on uninitialised value(s)
==62329==    at 0x1003C6135: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003EAAD2: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C32B1: vfprintf_l (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C141D: printf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x100003F34: main (c2.c:12)
==62329== 
==62329== Conditional jump or move depends on uninitialised value(s)
==62329==    at 0x1003C7A07: __ultoa (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C4D75: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003EAAD2: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C32B1: vfprintf_l (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C141D: printf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x100003F34: main (c2.c:12)
==62329== 
==62329== Syscall param write(buf) points to uninitialised byte(s)
==62329==    at 0x1005CAE56: write$NOCANCEL (in /usr/lib/system/libsystem_kernel.dylib)
==62329==    by 0x1003C236F: _swrite (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003BB0C6: __sflush (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003BD86F: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C74FF: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003EAAD2: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C32B1: vfprintf_l (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C141D: printf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x100003F50: main (c2.c:14)
==62329==  Address 0x1008285b2 is 18 bytes inside a block of size 4,096 alloc'd
==62329==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==62329==    by 0x1003BE367: __smakebuf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003D1C4D: __swsetup (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003EA94E: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C32B1: vfprintf_l (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x1003C141D: printf (in /usr/lib/system/libsystem_c.dylib)
==62329==    by 0x100003F34: main (c2.c:12)
==62329== 
0 1 2 3 4 5 6 7 8 1 
==62329== 
==62329== HEAP SUMMARY:
==62329==     in use at exit: 18,059 bytes in 162 blocks
==62329==   total heap usage: 176 allocs, 14 frees, 22,803 bytes allocated
==62329== 
==62329== 2,048 bytes in 1 blocks are definitely lost in loss record 34 of 37
==62329==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==62329==    by 0x100706079: objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::grow(unsigned int) (in /usr/lib/libobjc.A.dylib)
==62329==    by 0x10070600D: objc::detail::DenseSetPair<char const*>* objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::InsertIntoBucketImpl<char const*>(char const* const&, char const* const&, objc::detail::DenseSetPair<char const*>*) (in /usr/lib/libobjc.A.dylib)
==62329==    by 0x100709EC1: __sel_registerName(char const*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==62329==    by 0x1006F7D4B: fixupMethodList(method_list_t*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==62329==    by 0x1006ED835: prepareMethodLists(objc_class*, method_list_t**, int, bool, bool) (in /usr/lib/libobjc.A.dylib)
==62329==    by 0x10070007C: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==62329==    by 0x1006FFB7B: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==62329==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==62329==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==62329==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==62329==    by 0x1006EBA1E: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==62329== 
==62329== LEAK SUMMARY:
==62329==    definitely lost: 2,048 bytes in 1 blocks
==62329==    indirectly lost: 0 bytes in 0 blocks
==62329==      possibly lost: 0 bytes in 0 blocks
==62329==    still reachable: 0 bytes in 0 blocks
==62329==         suppressed: 16,011 bytes in 161 blocks
==62329== 
==62329== Use --track-origins=yes to see where uninitialised values come from
==62329== For lists of detected and suppressed errors, rerun with: -s
==62329== ERROR SUMMARY: 14 errors from 5 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hvalgrind --leak-check=full ./c2[31Dlldb c2                        [24Dexit   valgrind --leak-check=full ./c1c[32Dlldb c1c                        [24D[8Dexit    valgrind --leak-check=full ./c1c[32Dlldb c1c                        [24D[8Dscript c1c[10Dgcc -g[4Correto.c -o c1c[1Cc 2c[P[16C [17D2correto.c -o c2c[16D[?2004l

[1m[7m%[27m[1m[0m                                                                                                                           
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT DEPOIS DA CORRE√á√ÉO

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c2c[?2004l

(lldb) target create "c2c"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c2c' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gquit[1G[2m(lldb) [22m[12Gcontinue[1G[2m(lldb) [22m[16G[8Gr[K[1G[2m(lldb) [22m[9Gbreakpoint set --file c2.c --line 11[1G[2m(lldb) [22m[44G2[1@c.[1G[2m(lldb) [22m[33G[1@o.[1G[2m(lldb) [22m[34G[1@r.[1G[2m(lldb) [22m[35G[1@r.[1G[2m(lldb) [22m[36G[1@e.[1G[2m(lldb) [22m[37G[1@t.[1G[2m(lldb) [22m[38G[1@o.[1G[2m(lldb) [22m[39G
Breakpoint 1: where = c2c`main + 78 at c2correto.c:11:10, address = 0x0000000100003f0e
(lldb) [1G[2m(lldb) [22m[8Gr
Process 62373 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c2c' (x86_64)
Process 62373 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x0000000100003f0e[0m c2c`main(argc=1, argv=0x00007ffeefbff6d0) at [36mc2correto.c[0m:[33m11[0m:[33m10[0m
[33m  [0m 8   	  [32mfor[0m (i = [31m0[0m; i < [31m10[0m; i++)
[33m  [0m 9   	    a[i] = i;
[33m  [0m 10  	    
[33m->[0m 11  	  [32mfor[0m (i [4m=[0m [31m0[0m; i < [31m10[0m; i++){
[33m  [0m 12  	    printf("%d ", a[i]);
[33m  [0m 13  	  }
[33m  [0m 14  	  printf("\n");
Target 0: (c2c) stopped.
(lldb) [1G[2m(lldb) [22m[8Gcontinue
Process 62373 resuming
0 1 2 3 4 5 6 7 8 9 

Process 62373 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c2c[8Dgcc -g c2correto.c -o c2c[25Dvalgrind --leak-check=full ./c2c[?2004l

==62388== Memcheck, a memory error detector
==62388== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==62388== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==62388== Command: ./c2c
==62388== 
==62388== Conditional jump or move depends on uninitialised value(s)
==62388==    at 0x100614108: _platform_memchr$VARIANT$Base (in /usr/lib/system/libsystem_platform.dylib)
==62388==    by 0x1003BD7B4: __sfvwrite (in /usr/lib/system/libsystem_c.dylib)
==62388==    by 0x1003C5CCB: __vfprintf (in /usr/lib/system/libsystem_c.dylib)
==62388==    by 0x1003EAAD2: __v2printf (in /usr/lib/system/libsystem_c.dylib)
==62388==    by 0x1003C32B1: vfprintf_l (in /usr/lib/system/libsystem_c.dylib)
==62388==    by 0x1003C141D: printf (in /usr/lib/system/libsystem_c.dylib)
==62388==    by 0x100003F34: main (c2correto.c:12)
==62388== 
0 1 2 3 4 5 6 7 8 9 
==62388== 
==62388== HEAP SUMMARY:
==62388==     in use at exit: 18,059 bytes in 162 blocks
==62388==   total heap usage: 176 allocs, 14 frees, 22,803 bytes allocated
==62388== 
==62388== 2,048 bytes in 1 blocks are definitely lost in loss record 34 of 37
==62388==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==62388==    by 0x100706079: objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::grow(unsigned int) (in /usr/lib/libobjc.A.dylib)
==62388==    by 0x10070600D: objc::detail::DenseSetPair<char const*>* objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::InsertIntoBucketImpl<char const*>(char const* const&, char const* const&, objc::detail::DenseSetPair<char const*>*) (in /usr/lib/libobjc.A.dylib)
==62388==    by 0x100709EC1: __sel_registerName(char const*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==62388==    by 0x1006F7D4B: fixupMethodList(method_list_t*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==62388==    by 0x1006ED835: prepareMethodLists(objc_class*, method_list_t**, int, bool, bool) (in /usr/lib/libobjc.A.dylib)
==62388==    by 0x10070007C: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==62388==    by 0x1006FFB7B: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==62388==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==62388==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==62388==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==62388==    by 0x1006EBA1E: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==62388== 
==62388== LEAK SUMMARY:
==62388==    definitely lost: 2,048 bytes in 1 blocks
==62388==    indirectly lost: 0 bytes in 0 blocks
==62388==      possibly lost: 0 bytes in 0 blocks
==62388==    still reachable: 0 bytes in 0 blocks
==62388==         suppressed: 16,011 bytes in 161 blocks
==62388== 
==62388== Use --track-origins=yes to see where uninitialised values come from
==62388== For lists of detected and suppressed errors, rerun with: -s
==62388== ERROR SUMMARY: 11 errors from 2 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004heexit[?2004l


Script done on Wed Apr  5 22:55:13 2023
