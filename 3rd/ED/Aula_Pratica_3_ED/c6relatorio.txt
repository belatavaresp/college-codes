No c√≥digo, o problema √© que a fun√ß√£o resizeArray() muda o tamanho da mem√≥ria
alocada apontada por dPtr sem atualizar o ponteiro data da estrutura List. 
Ent√£o, data continua apontando para a mem√≥ria antiga que n√£o √© mais v√°lida depois 
da mudan√ßa de tamanho. Embora a mem√≥ria alocada anteriormente n√£o precisa ser liberada 
antes da mudan√ßa, porque a fun√ß√£o realloc() preserva o conte√∫do anterior, o problema √© 
que data n√£o √© atualizado, o que pode causar acesso inv√°lido √† mem√≥ria e comportamento 
indefinido.

Para corrigir basta atualizar o ponteiro data de array com o novo valor de dPtr
usando array->data = dPtr

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT ANTES DA CORRE√á√ÉO

Script started on Wed Apr  5 23:56:11 2023
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hggcc -g c6.c -0 o c6[?2004l

[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c6[?2004l

(lldb) target create "c6"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c6' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gr
Process 64550 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c6' (x86_64)
Process 64550 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gr[1G[2m(lldb) [22m[9Gquit[1G[2m(lldb) [22m[12Gr[K[1G[2m(lldb) [22m[9Gquit[1G[2m(lldb) [22m[12Gcontinue[1G[2m(lldb) [22m[16G[8Gr[K[1G[2m(lldb) [22m[9Gbreakpoint set --file c5.c --line 24[1G[2m(lldb) [22m[44G[1@].[1G[2m(lldb) [22m[33G[P.[1G[2m(lldb) [22m[32G[P.[1G[2m(lldb) [22m[31G[1@6.[1G[2m(lldb) [22m[32G.c --line 24[K[1G[2m(lldb) [22m[43G[K[1G[2m(lldb) [22m[42G12
Breakpoint 1: where = c6`resizeArray + 23 at c6.c:12:20, address = 0x0000000100003ed7
(lldb) [1G[2m(lldb) [22m[8Gr
Process 64584 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c6' (x86_64)
Process 64584 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x0000000100003ed7[0m c6`resizeArray(array=0x00000001003041a0) at [36mc6.c[0m:[33m12[0m:[33m20[0m
[33m  [0m 9   	
[33m  [0m 10  	List* resizeArray(List* array) {
[33m  [0m 11  	    int32_t* dPtr = array->data;
[33m->[0m 12  	    dPtr = realloc([4mdPtr[0m, [31m15[0m * [32msizeof[0m(int32_t)); [35m//doesn't update array->data[0m
[33m  [0m 13  	    [32mreturn[0m array;
[33m  [0m 14  	}
[33m  [0m 15  	
Target 0: (c6) stopped.
(lldb) [1G[2m(lldb) [22m[8Gconi[K[1G[2m(lldb) [22m[11Gtinue
Process 64584 resuming
Process 64584 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c6gcc -g c6.c -o c6[17Dexit             [13Dvalgrind --leak-check=full ./c5c  6[?2004l

==64595== Memcheck, a memory error detector
==64595== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==64595== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==64595== Command: ./c6
==64595== 
==64595== Invalid free() / delete / delete[] / realloc()
==64595==    at 0x10012491D: free (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==64595==    by 0x100003F53: main (c6.c:21)
==64595==  Address 0x1008285f0 is 0 bytes inside a block of size 40 free'd
==64595==    at 0x100124EE6: realloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==64595==    by 0x100003EE7: resizeArray (c6.c:12)
==64595==    by 0x100003F40: main (c6.c:19)
==64595==  Block was alloc'd at
==64595==    at 0x100124BA0: calloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==64595==    by 0x100003F30: main (c6.c:18)
==64595== 
==64595== 
==64595== HEAP SUMMARY:
==64595==     in use at exit: 14,023 bytes in 162 blocks
==64595==   total heap usage: 178 allocs, 17 frees, 18,823 bytes allocated
==64595== 
==64595== 60 bytes in 1 blocks are definitely lost in loss record 16 of 37
==64595==    at 0x100124EE6: realloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==64595==    by 0x100003EE7: resizeArray (c6.c:12)
==64595==    by 0x100003F40: main (c6.c:19)
==64595== 
==64595== 2,048 bytes in 1 blocks are definitely lost in loss record 35 of 37
==64595==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==64595==    by 0x100706079: objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::grow(unsigned int) (in /usr/lib/libobjc.A.dylib)
==64595==    by 0x10070600D: objc::detail::DenseSetPair<char const*>* objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::InsertIntoBucketImpl<char const*>(char const* const&, char const* const&, objc::detail::DenseSetPair<char const*>*) (in /usr/lib/libobjc.A.dylib)
==64595==    by 0x100709EC1: __sel_registerName(char const*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==64595==    by 0x1006F7D4B: fixupMethodList(method_list_t*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==64595==    by 0x1006ED835: prepareMethodLists(objc_class*, method_list_t**, int, bool, bool) (in /usr/lib/libobjc.A.dylib)
==64595==    by 0x10070007C: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64595==    by 0x1006FFB7B: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64595==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64595==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64595==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64595==    by 0x1006EBA1E: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==64595== 
==64595== LEAK SUMMARY:
==64595==    definitely lost: 2,108 bytes in 2 blocks
==64595==    indirectly lost: 0 bytes in 0 blocks
==64595==      possibly lost: 0 bytes in 0 blocks
==64595==    still reachable: 0 bytes in 0 blocks
==64595==         suppressed: 11,915 bytes in 160 blocks
==64595== 
==64595== For lists of detected and suppressed errors, rerun with: -s
==64595== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hvalgrind --leak-check=full ./c6[31Dlldb c6                        [24Dgcc -g c6.c -o c6c.c -o c6[8Do.c -o c6[8Dr.c -o c6[8Dr.c -o c6[8De.c -o c6[8Dt.c -o c6[8Do.c -o c6[8D[1C[1C[1C[1C[1C[1C[1C[1Cc[?2004l

[1m[7m%[27m[1m[0m                                                                                                                           
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT DEPOIS DA CORRE√á√ÉO

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c6c[?2004l

(lldb) target create "c6c"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c6c' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gr
Process 64621 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c6c' (x86_64)
Process 64621 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c6c[8Dgcc -g c6correto.c -o c6c[25Dvalgrind --leak-check=full ./c6c[?2004l

==64631== Memcheck, a memory error detector
==64631== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==64631== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==64631== Command: ./c6c
==64631== 
==64631== 
==64631== HEAP SUMMARY:
==64631==     in use at exit: 13,963 bytes in 161 blocks
==64631==   total heap usage: 178 allocs, 17 frees, 18,823 bytes allocated
==64631== 
==64631== 2,048 bytes in 1 blocks are definitely lost in loss record 34 of 36
==64631==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==64631==    by 0x100706079: objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::grow(unsigned int) (in /usr/lib/libobjc.A.dylib)
==64631==    by 0x10070600D: objc::detail::DenseSetPair<char const*>* objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::InsertIntoBucketImpl<char const*>(char const* const&, char const* const&, objc::detail::DenseSetPair<char const*>*) (in /usr/lib/libobjc.A.dylib)
==64631==    by 0x100709EC1: __sel_registerName(char const*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==64631==    by 0x1006F7D4B: fixupMethodList(method_list_t*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==64631==    by 0x1006ED835: prepareMethodLists(objc_class*, method_list_t**, int, bool, bool) (in /usr/lib/libobjc.A.dylib)
==64631==    by 0x10070007C: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64631==    by 0x1006FFB7B: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64631==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64631==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64631==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64631==    by 0x1006EBA1E: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==64631== 
==64631== LEAK SUMMARY:
==64631==    definitely lost: 2,048 bytes in 1 blocks
==64631==    indirectly lost: 0 bytes in 0 blocks
==64631==      possibly lost: 0 bytes in 0 blocks
==64631==    still reachable: 0 bytes in 0 blocks
==64631==         suppressed: 11,915 bytes in 160 blocks
==64631== 
==64631== For lists of detected and suppressed errors, rerun with: -s
==64631== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004heexit[?2004l


Script done on Wed Apr  5 23:57:39 2023
