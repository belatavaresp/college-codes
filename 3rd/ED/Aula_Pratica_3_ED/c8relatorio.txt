No c√≥digo o tamanho alocado para 'source' √© de 26 bytes, mas o loop de c√≥pia 
em 'destination' acessa 27 bytes de mem√≥ria, incluindo um byte al√©m do final 
do bloco alocado. Isso pode resultar em comportamento indefinido, como um erro 
de segmenta√ß√£o ou dados corrompidos.

Para resolver, √© s√≥ aumentar o valor no malloc de source para 27.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT ANTES DA CORRE√á√ÉO

Script started on Thu Apr  6 00:12:37 2023
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hexitvalgrind --leak-check=full ./c7c[32Dlldb c7c                        [24D[8Dgcc -g c7correto.c -o c7c[25Dvalgrind --leak-check=full ./c7[31Dlldb c7                        [24Dgcc -g c7.c -o c7.c -o c7 [9D8.c -o c7[8D[1C[1C[1C[1C[1C[1C[1C[1C 8[?2004l

[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hgcc -g c8.c -o c8[17Dexit             [13Dvalgrind --leak-check=full ./c7c[32Dlldb c7c                        [24D  8[?2004l

(lldb) target create "c8"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c8' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gquit[1G[2m(lldb) [22m[12Gr[K[1G[2m(lldb) [22m[9Gquit[1G[2m(lldb) [22m[12Gcontinue[1G[2m(lldb) [22m[16G[8Gr[K[1G[2m(lldb) [22m[9Gbreakpoint set --file c7.c --line 5[1G[2m(lldb) [22m[43G[P.[1G[2m(lldb) [22m[31G[1@8.[1G[2m(lldb) [22m[32G.c --line 5[K[1G[2m(lldb) [22m[42G6
Breakpoint 1: where = c8`main + 34 at c8.c:6:20, address = 0x0000000100003f12
(lldb) [1G[2m(lldb) [22m[8Gr
Process 65277 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c8' (x86_64)
Process 65277 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x0000000100003f12[0m c8`main at [36mc8.c[0m:[33m6[0m:[33m20[0m
[33m  [0m 3   	
[33m  [0m 4   	[32mint[0m main() {
[33m  [0m 5   	    [32mchar[0m* destination = calloc([31m27[0m, [32msizeof[0m([32mchar[0m));
[33m->[0m 6   	    [32mchar[0m* source = [4mmalloc[0m([31m26[0m * [32msizeof[0m([32mchar[0m));
[33m  [0m 7   	
[33m  [0m 8   	    [32mfor[0m(uint8_t i = [31m0[0m; i < [31m27[0m; i++) {
[33m  [0m 9   	        *(destination + i) = *(source + i); [35m//Look at the last iteration.[0m
Target 0: (c8) stopped.
(lldb) [1G[2m(lldb) [22m[8Gquit
Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y[Kn
(lldb) [1G[2m(lldb) [22m[8Gcontinue
Process 65277 resuming
Process 65277 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c8gcc -g c8.c -o c8[17Dexit             [13Dvalgrind --leak-check=full ./c7c  8[?2004l

==65296== Memcheck, a memory error detector
==65296== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==65296== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==65296== Command: ./c8
==65296== 
==65296== Invalid read of size 1
==65296==    at 0x100003F3C: main (c8.c:9)
==65296==  Address 0x10082861a is 0 bytes after a block of size 26 alloc'd
==65296==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==65296==    by 0x100003F1B: main (c8.c:6)
==65296== 
==65296== 
==65296== HEAP SUMMARY:
==65296==     in use at exit: 13,963 bytes in 161 blocks
==65296==   total heap usage: 177 allocs, 16 frees, 18,760 bytes allocated
==65296== 
==65296== 2,048 bytes in 1 blocks are definitely lost in loss record 34 of 36
==65296==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==65296==    by 0x100706079: objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::grow(unsigned int) (in /usr/lib/libobjc.A.dylib)
==65296==    by 0x10070600D: objc::detail::DenseSetPair<char const*>* objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::InsertIntoBucketImpl<char const*>(char const* const&, char const* const&, objc::detail::DenseSetPair<char const*>*) (in /usr/lib/libobjc.A.dylib)
==65296==    by 0x100709EC1: __sel_registerName(char const*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==65296==    by 0x1006F7D4B: fixupMethodList(method_list_t*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==65296==    by 0x1006ED835: prepareMethodLists(objc_class*, method_list_t**, int, bool, bool) (in /usr/lib/libobjc.A.dylib)
==65296==    by 0x10070007C: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65296==    by 0x1006FFB7B: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65296==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65296==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65296==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65296==    by 0x1006EBA1E: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==65296== 
==65296== LEAK SUMMARY:
==65296==    definitely lost: 2,048 bytes in 1 blocks
==65296==    indirectly lost: 0 bytes in 0 blocks
==65296==      possibly lost: 0 bytes in 0 blocks
==65296==    still reachable: 0 bytes in 0 blocks
==65296==         suppressed: 11,915 bytes in 160 blocks
==65296== 
==65296== For lists of detected and suppressed errors, rerun with: -s
==65296== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hvalgrind --leak-check=full ./c8[31Dlldb c8                        [24Dgcc -g c8.c -o c8[12Dexit             [13Dvalgrind --leak-check=full ./c7c[32Dlldb c7c                        [24D[8Dgcc -g c7correto.c -o c7c[P[16C [17D8correto.c -o c7c[16D[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1Cc 8c[?2004l

[1m[7m%[27m[1m[0m   

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT DEPOIS DA CORRE√á√ÉO
 
[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hgcc -g c8correto.c -o c8c[25Dvalgrind --leak-check=full ./c8[31Dlldb c8                        [24Dc[?2004l

(lldb) target create "c8c"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c8c' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gr
Process 65323 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c8c' (x86_64)
Process 65323 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c8c[8Dgcc -g c8correto.c -o c8c[25Dvalgrind --leak-check=full ./c8c[?2004l

==65332== Memcheck, a memory error detector
==65332== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==65332== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==65332== Command: ./c8c
==65332== 
==65332== 
==65332== HEAP SUMMARY:
==65332==     in use at exit: 13,963 bytes in 161 blocks
==65332==   total heap usage: 177 allocs, 16 frees, 18,761 bytes allocated
==65332== 
==65332== 2,048 bytes in 1 blocks are definitely lost in loss record 34 of 36
==65332==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==65332==    by 0x100706079: objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::grow(unsigned int) (in /usr/lib/libobjc.A.dylib)
==65332==    by 0x10070600D: objc::detail::DenseSetPair<char const*>* objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::InsertIntoBucketImpl<char const*>(char const* const&, char const* const&, objc::detail::DenseSetPair<char const*>*) (in /usr/lib/libobjc.A.dylib)
==65332==    by 0x100709EC1: __sel_registerName(char const*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==65332==    by 0x1006F7D4B: fixupMethodList(method_list_t*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==65332==    by 0x1006ED835: prepareMethodLists(objc_class*, method_list_t**, int, bool, bool) (in /usr/lib/libobjc.A.dylib)
==65332==    by 0x10070007C: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65332==    by 0x1006FFB7B: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65332==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65332==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65332==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65332==    by 0x1006EBA1E: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==65332== 
==65332== LEAK SUMMARY:
==65332==    definitely lost: 2,048 bytes in 1 blocks
==65332==    indirectly lost: 0 bytes in 0 blocks
==65332==      possibly lost: 0 bytes in 0 blocks
==65332==    still reachable: 0 bytes in 0 blocks
==65332==         suppressed: 11,915 bytes in 160 blocks
==65332== 
==65332== For lists of detected and suppressed errors, rerun with: -s
==65332== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004heexit[?2004l


Script done on Thu Apr  6 00:14:35 2023
