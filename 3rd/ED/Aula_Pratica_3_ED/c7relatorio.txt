No c√≥digo o tamanho alocado para o ponteiro 'alphabet' deveria ser de 27 bytes, 
para permitir espa√ßo para os 26 caracteres do alfabeto e mais um caractere nulo ('\0') 
para indicar o final da string.

Logo para corrigir o problema, apenas aumentamos o espa√ßo de mem√≥ria alocado para 27bits.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT ANTES DA CORRE√á√ÉO

Script started on Thu Apr  6 00:04:29 2023
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hggcc -g c7 -o c7. -o c7c -o c7[?2004l

[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c7[?2004l

(lldb) target create "c7"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c7' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gquit[1G[2m(lldb) [22m[12Gr[K[1G[2m(lldb) [22m[9Gquit[1G[2m(lldb) [22m[12Gcontinue[1G[2m(lldb) [22m[16G[8Gr[K[1G[2m(lldb) [22m[9Gbreakpoint set --file c6.c --line 12[1G[2m(lldb) [22m[44G[P.[1G[2m(lldb) [22m[31G[1@7.[1G[2m(lldb) [22m[32G.c --line 12[K[1G[2m(lldb) [22m[42G2[K[1G[2m(lldb) [22m[42G5
Breakpoint 1: where = c7`main + 15 at c7.c:5:22, address = 0x0000000100003f1f
(lldb) [1G[2m(lldb) [22m[8Gr
Process 64951 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c7' (x86_64)
Process 64951 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x0000000100003f1f[0m c7`main at [36mc7.c[0m:[33m5[0m:[33m22[0m
[33m  [0m 2   	#include <stdint.h>
[33m  [0m 3   	
[33m  [0m 4   	[32mint[0m main() {
[33m->[0m 5   	    [32mchar[0m* alphabet = [4mcalloc[0m([31m26[0m, [32msizeof[0m([32mchar[0m));
[33m  [0m 6   	
[33m  [0m 7   	    [32mfor[0m(uint8_t i = [31m0[0m; i < [31m26[0m; i++) {
[33m  [0m 8   	        *(alphabet + i) = [31m'A'[0m + i;
Target 0: (c7) stopped.
(lldb) [1G[2m(lldb) [22m[8Gcontinute[K[1G[2m(lldb) [22m[16G[K[1G[2m(lldb) [22m[15Ge
Process 64951 resuming
Process 64951 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hv lldb c7gcc -g c7.c -o c7[17Dexit             [13Dvalgrind --leak-check=full ./c6c  6 7[?2004l

==64966== Memcheck, a memory error detector
==64966== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==64966== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==64966== Command: ./c7
==64966== 
==64966== Invalid write of size 1
==64966==    at 0x100003F69: main (c7.c:10)
==64966==  Address 0x1008285ba is 0 bytes after a block of size 26 alloc'd
==64966==    at 0x100124BA0: calloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==64966==    by 0x100003F2D: main (c7.c:5)
==64966== 
==64966== 
==64966== HEAP SUMMARY:
==64966==     in use at exit: 13,963 bytes in 161 blocks
==64966==   total heap usage: 176 allocs, 15 frees, 18,733 bytes allocated
==64966== 
==64966== 2,048 bytes in 1 blocks are definitely lost in loss record 34 of 36
==64966==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==64966==    by 0x100706079: objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::grow(unsigned int) (in /usr/lib/libobjc.A.dylib)
==64966==    by 0x10070600D: objc::detail::DenseSetPair<char const*>* objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::InsertIntoBucketImpl<char const*>(char const* const&, char const* const&, objc::detail::DenseSetPair<char const*>*) (in /usr/lib/libobjc.A.dylib)
==64966==    by 0x100709EC1: __sel_registerName(char const*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==64966==    by 0x1006F7D4B: fixupMethodList(method_list_t*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==64966==    by 0x1006ED835: prepareMethodLists(objc_class*, method_list_t**, int, bool, bool) (in /usr/lib/libobjc.A.dylib)
==64966==    by 0x10070007C: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64966==    by 0x1006FFB7B: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64966==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64966==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64966==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==64966==    by 0x1006EBA1E: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==64966== 
==64966== LEAK SUMMARY:
==64966==    definitely lost: 2,048 bytes in 1 blocks
==64966==    indirectly lost: 0 bytes in 0 blocks
==64966==      possibly lost: 0 bytes in 0 blocks
==64966==    still reachable: 0 bytes in 0 blocks
==64966==         suppressed: 11,915 bytes in 160 blocks
==64966== 
==64966== For lists of detected and suppressed errors, rerun with: -s
==64966== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hvalgrind --leak-check=full ./c7[31Dlldb c7                        [24Dgcc -g c7.c -o c7c.c -o c7[8Do.c -o c7[8Dr.c -o c7[8Dr.c -o c7[8De.c -o c7[8Dt.c -o c7[8Do.c -o c7[8D[1C[1C[1C[1C[1C[1C[1C[1Cc[?2004l

[1m[7m%[27m[1m[0m    

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT DEPOIS DA CORRE√á√ÉO

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c7c[?2004l

(lldb) target create "c7c"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c7c' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gr
Process 64989 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c7c' (x86_64)
Process 64989 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c7c[8Dgcc -g c7correto.c -o c7c[25Dvalgrind --leak-check=full ./c7c[?2004l

==65021== Memcheck, a memory error detector
==65021== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==65021== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==65021== Command: ./c7c
==65021== 
==65021== 
==65021== HEAP SUMMARY:
==65021==     in use at exit: 13,963 bytes in 161 blocks
==65021==   total heap usage: 176 allocs, 15 frees, 18,734 bytes allocated
==65021== 
==65021== 2,048 bytes in 1 blocks are definitely lost in loss record 34 of 36
==65021==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==65021==    by 0x100706079: objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::grow(unsigned int) (in /usr/lib/libobjc.A.dylib)
==65021==    by 0x10070600D: objc::detail::DenseSetPair<char const*>* objc::DenseMapBase<objc::DenseMap<char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >, char const*, objc::detail::DenseSetEmpty, objc::DenseMapValueInfo<objc::detail::DenseSetEmpty>, objc::DenseMapInfo<char const*>, objc::detail::DenseSetPair<char const*> >::InsertIntoBucketImpl<char const*>(char const* const&, char const* const&, objc::detail::DenseSetPair<char const*>*) (in /usr/lib/libobjc.A.dylib)
==65021==    by 0x100709EC1: __sel_registerName(char const*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==65021==    by 0x1006F7D4B: fixupMethodList(method_list_t*, bool, bool) (in /usr/lib/libobjc.A.dylib)
==65021==    by 0x1006ED835: prepareMethodLists(objc_class*, method_list_t**, int, bool, bool) (in /usr/lib/libobjc.A.dylib)
==65021==    by 0x10070007C: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65021==    by 0x1006FFB7B: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65021==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65021==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65021==    by 0x1006FFB54: realizeClassWithoutSwift(objc_class*, objc_class*) (in /usr/lib/libobjc.A.dylib)
==65021==    by 0x1006EBA1E: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==65021== 
==65021== LEAK SUMMARY:
==65021==    definitely lost: 2,048 bytes in 1 blocks
==65021==    indirectly lost: 0 bytes in 0 blocks
==65021==      possibly lost: 0 bytes in 0 blocks
==65021==    still reachable: 0 bytes in 0 blocks
==65021==         suppressed: 11,915 bytes in 160 blocks
==65021== 
==65021== For lists of detected and suppressed errors, rerun with: -s
==65021== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004heexit[?2004l


Script done on Thu Apr  6 00:06:06 2023
