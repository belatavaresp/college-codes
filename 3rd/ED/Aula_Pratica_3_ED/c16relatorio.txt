O problema no c√≥digo √© que estamos tentando dividir um n√∫mero por zero, 
o que resulta em um erro de divis√£o por zero. 

Para corrigir, devemos verificar se b √© diferente de zero antes de realizar 
a divis√£o em actual_calc().

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT ANTES DA CORRE√á√ÉO

Script started on Thu Apr  6 01:24:21 2023
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hexitvalgrind --leak-check=full ./c15c[33Dlldb c15c                        [24D[9Dgcc -g c15correto.c -o c15c[27Dvalgrind --leak-check=full ./c15[32Dlldb c15                        [24D[8Dgcc -g c15.c -o c15[P[9C [10D6.c -o c15[9D[1C[1C[1C[1C[1C[1C[1C[1C[1C 6[?2004l

[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c16[?2004l

(lldb) target create "c16"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c16' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gr
Process 2977 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c16' (x86_64)
Process 2977 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mEXC_ARITHMETIC (code=EXC_I386_DIV, subcode=0x0)[0m
    frame #0: [33m0x0000000100003f55[0m c16`actual_calc(a=13, b=0) at [36mc16.c[0m:[33m7[0m:[33m6[0m
[33m  [0m 4   	[35m//fun√ß√µes que n√£o retornam valores int[0m
[33m  [0m 5   	[32mint[0m actual_calc([32mint[0m a, [32mint[0m b){
[33m  [0m 6   	  [32mint[0m c;
[33m->[0m 7   	  c=a[4m/[0mb;
[33m  [0m 8   	  [32mreturn[0m [31m0[0m;
[33m  [0m 9   	}
[33m  [0m 10  	
Target 0: (c16) stopped.
(lldb) [1G[2m(lldb) [22m[8Gquit
Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c16[8Dgcc -g c16.c -o c16[19Dexit               [15Dvalgrind --leak-check=full ./c15c  6[?2004l

==2998== Memcheck, a memory error detector
==2998== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2998== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==2998== Command: ./c16
==2998== 
==2998== 
==2998== Process terminating with default action of signal 8 (SIGFPE)
==2998==  Integer divide by zero at address 0x700000D87EC1
==2998==    at 0x100003F55: ??? (in ./c16)
==2998==    by 0x100003F80: ??? (in ./c16)
==2998==    by 0x100003FA3: ??? (in ./c16)
==2998==    by 0x1002D2CC8: start (in /usr/lib/system/libdyld.dylib)
==2998== 
==2998== HEAP SUMMARY:
==2998==     in use at exit: 13,963 bytes in 161 blocks
==2998==   total heap usage: 175 allocs, 14 frees, 18,707 bytes allocated
==2998== 
==2998== LEAK SUMMARY:
==2998==    definitely lost: 0 bytes in 0 blocks
==2998==    indirectly lost: 0 bytes in 0 blocks
==2998==      possibly lost: 0 bytes in 0 blocks
==2998==    still reachable: 2,048 bytes in 1 blocks
==2998==         suppressed: 11,915 bytes in 160 blocks
==2998== Reachable blocks (those to which a pointer was found) are not shown.
==2998== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2998== 
==2998== For lists of detected and suppressed errors, rerun with: -s
==2998== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 7 from 7)
zsh: floating point exception  valgrind --leak-check=full ./c16
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hvalgrind --leak-check=full ./c16[32Dlldb c16                        [24D[8Dgcc -g c16.c -o c16[19Dexit               [15Dvalgrind --leak-check=full ./c15c[33Dlldb c15c                        [24D[9Dgcc -g c15correto.c -o c15c[P[17C [18D6correto.c -o c15c[17D[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1Cc 6c[?2004l

[1m[7m%[27m[1m[0m                                                                                                                           
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT DEPOIS DA CORRE√á√ÉO

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c16c[?2004l

(lldb) target create "c16c"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c16c' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gr
Process 3030 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c16c' (x86_64)
Process 3030 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c16c[9Dgcc -g c16correto.c -o c16c[27Dvalgrind --leak-check=full ./c16c[?2004l

==3039== Memcheck, a memory error detector
==3039== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==3039== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==3039== Command: ./c16c
==3039== 
==3039== 
==3039== HEAP SUMMARY:
==3039==     in use at exit: 13,963 bytes in 161 blocks
==3039==   total heap usage: 175 allocs, 14 frees, 18,707 bytes allocated
==3039== 
==3039== LEAK SUMMARY:
==3039==    definitely lost: 0 bytes in 0 blocks
==3039==    indirectly lost: 0 bytes in 0 blocks
==3039==      possibly lost: 0 bytes in 0 blocks
==3039==    still reachable: 2,048 bytes in 1 blocks
==3039==         suppressed: 11,915 bytes in 160 blocks
==3039== Reachable blocks (those to which a pointer was found) are not shown.
==3039== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3039== 
==3039== For lists of detected and suppressed errors, rerun with: -s
==3039== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004heexit[?2004l


Script done on Thu Apr  6 01:25:34 2023
