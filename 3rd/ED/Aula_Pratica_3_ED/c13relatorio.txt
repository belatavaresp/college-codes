O c√≥digo tem dois problemas de vazamento de mem√≥ria: a aloca√ß√£o original 
√© perdida quando uma nova aloca√ß√£o √© feita, e a √∫ltima aloca√ß√£o n√£o √© liberada 
antes do t√©rmino do programa.

A corre√ß√£o do c√≥digo envolve duas etapas: primeiro, liberamos a mem√≥ria 
alocada para p antes de alocar um novo bloco de mem√≥ria para ele usando a fun√ß√£o free() 
ap√≥s cada aloca√ß√£o de mem√≥ria. 
Segundamente, devemos liberar toda a mem√≥ria alocada para p antes de finalizar o programa.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT ANTES DA CORRE√á√ÉO

Script started on Thu Apr  6 00:55:23 2023
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hexitvalgrind --leak-check=full ./c12c[33Dlldb c12c                        [24D[9Dgcc -g c12correto.c -o c12c[27Dvalgrind --leak-check=full ./c12[32Dlldb c12                        [24D[8Dgcc -g c12.c -o c12[P[9C [10D3.c -o c12[9D[1C[1C[1C[1C[1C[1C[1C[1C[1C 3[?2004l

[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c13[?2004l

(lldb) target create "c13"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c13' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gr[K[1G[2m(lldb) [22m[8Gquit[1G[2m(lldb) [22m[12Gr[K[1G[2m(lldb) [22m[9Gquit[1G[2m(lldb) [22m[12Gcontinue[1G[2m(lldb) [22m[16G[8Gr[K[1G[2m(lldb) [22m[9Gbreakpoint set --file c12.c --line 5[1G[2m(lldb) [22m[44G[P.[1G[2m(lldb) [22m[32G[1@3.[1G[2m(lldb) [22m[33G.c --line 5[K[1G[2m(lldb) [22m[43G10
Breakpoint 1: where = c13`main + 29 at c13.c:10:16, address = 0x0000000100003f4d
(lldb) [1G[2m(lldb) [22m[8Gr
Process 1798 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c13' (x86_64)
Process 1798 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x0000000100003f4d[0m c13`main at [36mc13.c[0m:[33m10[0m:[33m16[0m
[33m  [0m 7   	
[33m  [0m 8   	  [35m//sem libera√ß√£o de mem√≥ria em todos os malloc[0m
[33m  [0m 9   	  p = ([32mchar[0m *) malloc([31m19[0m);
[33m->[0m 10  	  p = ([32mchar[0m *) [4mmalloc[0m([31m12[0m);
[33m  [0m 11  	  free(p);
[33m  [0m 12  	  p = ([32mchar[0m *) malloc([31m16[0m);
[33m  [0m 13  	
Target 0: (c13) stopped.
(lldb) [1G[2m(lldb) [22m[8Gcontinue
Process 1798 resuming
Process 1798 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c13[8Dgcc -g c13.c -o c13[19Dexit               [15Dvalgrind --leak-check=full ./c12c[1C  3[?2004l

==1809== Memcheck, a memory error detector
==1809== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1809== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==1809== Command: ./c13
==1809== 
==1809== 
==1809== HEAP SUMMARY:
==1809==     in use at exit: 13,998 bytes in 163 blocks
==1809==   total heap usage: 178 allocs, 15 frees, 18,754 bytes allocated
==1809== 
==1809== 16 bytes in 1 blocks are definitely lost in loss record 4 of 38
==1809==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==1809==    by 0x100003F6D: main (c13.c:12)
==1809== 
==1809== 19 bytes in 1 blocks are definitely lost in loss record 5 of 38
==1809==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==1809==    by 0x100003F48: main (c13.c:9)
==1809== 
==1809== LEAK SUMMARY:
==1809==    definitely lost: 35 bytes in 2 blocks
==1809==    indirectly lost: 0 bytes in 0 blocks
==1809==      possibly lost: 0 bytes in 0 blocks
==1809==    still reachable: 2,048 bytes in 1 blocks
==1809==         suppressed: 11,915 bytes in 160 blocks
==1809== Reachable blocks (those to which a pointer was found) are not shown.
==1809== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1809== 
==1809== For lists of detected and suppressed errors, rerun with: -s
==1809== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hvalgrind --leak-check=full ./c13[32Dlldb c13                        [24D[8Dgcc -g c13.c -o c13[19Dexit               [15Dvalgrind --leak-check=full ./c12c[33Dlldb c12c                        [24D[9Dgcc -g c12correto.c -o c12c[P[17C [18D3correto.c -o c12c[17D[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1Cc 3c[?2004l

[1m[7m%[27m[1m[0m   

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SCRIPT DEPOIS DA CORRE√á√ÉO
 
[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hllldb c13c[?2004l

(lldb) target create "c13c"
Current executable set to '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c13c' (x86_64).
(lldb) [1G[2m(lldb) [22m[8Gr
Process 1829 launched: '/Users/belatavaresp/Documents/GitHub/Aula_Pratica_3_ED/c13c' (x86_64)
Process 1829 exited with status = 0 (0x00000000) 
(lldb) [1G[2m(lldb) [22m[8Gquit
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004hlldb c13c[9Dgcc -g c13correto.c -o c13c[27Dvalgrind --leak-check=full ./c13c[?2004l

==1836== Memcheck, a memory error detector
==1836== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1836== Using Valgrind-3.21.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==1836== Command: ./c13c
==1836== 
==1836== 
==1836== HEAP SUMMARY:
==1836==     in use at exit: 13,979 bytes in 162 blocks
==1836==   total heap usage: 178 allocs, 16 frees, 18,754 bytes allocated
==1836== 
==1836== 16 bytes in 1 blocks are definitely lost in loss record 4 of 37
==1836==    at 0x100124545: malloc (in /usr/local/Cellar/valgrind/HEAD-1ab162e/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==1836==    by 0x100003F76: main (c13correto.c:13)
==1836== 
==1836== LEAK SUMMARY:
==1836==    definitely lost: 16 bytes in 1 blocks
==1836==    indirectly lost: 0 bytes in 0 blocks
==1836==      possibly lost: 0 bytes in 0 blocks
==1836==    still reachable: 2,048 bytes in 1 blocks
==1836==         suppressed: 11,915 bytes in 160 blocks
==1836== Reachable blocks (those to which a pointer was found) are not shown.
==1836== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1836== 
==1836== For lists of detected and suppressed errors, rerun with: -s
==1836== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)
[1m[7m%[27m[1m[0m                                                                                                                           
 

[0m[27m[24m[Jbelatavaresp@MacBook-Pro-de-Izabela Aula_Pratica_3_ED % [K[?2004heexit[?2004l


Script done on Thu Apr  6 00:56:45 2023
